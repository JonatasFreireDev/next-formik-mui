import Head from "next/head";

import { Formik, Form, Field } from "formik";
import BasicTabs from "../components/Tabs/BasicTabs";

import { validationSchema } from "../validations/login";
import TextField from "../components/CustomFields/TextField";

import ItemOne from "../components/Forms/ItemOne";

const tabs = (formikProps) => {
  const tabs = [
    {
      label: "tab1",
      component: <ItemOne form={formikProps} />,
    },
    {
      label: "tab2",
      component: (
        <Field name="tab2.email" label="email" component={TextField} />
      ),
    },
    {
      label: "tab3",
      component: (
        <Field name="tab3.password" label="Password" component={TextField} />
      ),
    },
  ];

  return tabs;
};

export default function Home() {
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"
        />
        <link
          rel="stylesheet"
          href="https://fonts.googleapis.com/icon?family=Material+Icons"
        />
      </Head>
      <Formik
        initialValues={{
          tab1: {
            name: "",
            name2: "",
            name3: "",
          },
          tab2: {
            email: "",
          },
          tab3: {
            password: "",
          },
        }}
        validationSchema={validationSchema}
        onSubmit={(values, actions, ...rest) => {
          setTimeout(() => {
            alert(JSON.stringify(values, null, 2));
          }, 500);

          actions.resetForm();
        }}
        render={(formikProps) => {
          return (
            <Form noValidate={true}>
              <BasicTabs tabs={tabs(formikProps)} formikProps={formikProps} />
              <button type="submit">submit</button>
            </Form>
          );
        }}
      ></Formik>
    </div>
  );
}
